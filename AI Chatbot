MIT Open Data License (Generic Script)

Permission is hereby granted, free of charge, to any person obtaining a copy of this script and associated documentation files (the "Script"), to deal in the Script without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Script, and to permit persons to whom the Script is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Script.

THE SCRIPT IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SCRIPT OR THE USE OR OTHER DEALINGS IN THE SCRIPT.



import openai
import random
import time

# Set your OpenAI API key here
openai.api_key = "YOUR_API_KEY"

def generate_random_prompt(user_data):
    random_topic = random.choice(user_data['interests'])
    prompt = f"Hey there! Let's talk about {random_topic}. What's your opinion?"
    return prompt

def get_user_data():
    # Replace this with your actual user data retrieval logic
    user_database = [
        {
            "name": "John",
            "age": 30,
            "interests": ["movies", "travel"],
        },
        {
            "name": "Emily",
            "age": 25,
            "interests": ["cooking", "books"],
        },
        # Add more user data entries
    ]
    return user_database

def main():
    user_database = get_user_data()
    
    while True:
        # Generate a random time interval between 5 to 15 seconds
        random_interval = random.randint(5, 15)
        
        print(f"Waiting for {random_interval} seconds...")
        time.sleep(random_interval)  # Wait for the random interval
        
        # Select a random user's data from the database
        random_user_data = random.choice(user_database)
        random_prompt = generate_random_prompt(random_user_data)
        
        # Generate a response using the random prompt
        response = openai.Completion.create(
            engine="text-davinci-003",
            prompt=random_prompt,
            max_tokens=50
        )
        
        # Print the chatbot's response
        print(f"Chatbot: {response.choices[0].text.strip()}")

if __name__ == "__main__":
    main()
